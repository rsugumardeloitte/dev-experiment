name: DevSecOps Demo

permissions:
  contents: write
  security-events: write

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  devsecops:
    runs-on: ubuntu-latest

    steps:
      # ----- Checkout code -----
      - name: Checkout repository
        uses: actions/checkout@v3

      # ----- Setup Node.js -----
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # ----- Install dependencies -----
      - name: Install dependencies
        run: npm install

      # ----- Static Code Analysis Javascript Linter -----
      - name: Run JSHint
        run: |
          set -e 
          npm install -g jshint
          jshint demo.js || exit 1

      # ----- SAST (Static Application Security Testing) -----
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

      # ----- SCA + SBOM -----
      - name: Install Syft
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin

      - name: Install Grype
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin

      - name: Generate SBOM (CycloneDX JSON)
        run: syft dir:. -o cyclonedx-json > sbom.json

      - name: SCA Scan (fail on high severity)
        run: grype dir:. --fail-on high

      - name: Upload SBOM artifact
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: sbom.json

  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: devsecops
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./

      - name: Run OWASP ZAP Quick Scan
        uses: zaproxy/action-full-scan@v0.9.0
        with:
          target: 'https://rsugumardeloitte.github.io/dev-experiment/'  # <-- replace with your GitHub Pages URL
          rules_file_name: ''   # optional, leave empty for default rules
          fail_on_alert: false  # set to true to fail workflow if vulnerabilities are found
          cmd_options: '-quickurl https://rsugumardeloitte.github.io/dev-experiment/ -report /github/workspace/zap_report.html'

      - name: Upload OWASP ZAP Report
        uses: actions/upload-artifact@v3
        with:
          name: zap-report
          path: zap_report.html

    # ----- (Optional) DAST -----
    # - name: Start local app
    #   run: |
    #     nohup npx http-server . -p 8080 &
    #     sleep 5
    #
    # - name: Run OWASP ZAP Baseline Scan
    #   uses: zaproxy/action-baseline@v0.7.0
    #   with:
    #     target: 'http://localhost:8080'
